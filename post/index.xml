<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post-rsses on Christian&#39;s Blog</title>
    <link>http://www.jung-christian.de/post/index.xml</link>
    <description>Recent content in Post-rsses on Christian&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright 2017 by Christian Jung</copyright>
    <lastBuildDate>Thu, 31 May 2018 12:19:49 +0100</lastBuildDate>
    <atom:link href="http://www.jung-christian.de/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Mini Series on Ansible Buttons in CloudForms 4.6</title>
      <link>http://www.jung-christian.de/post/2018/06/ansile-updates-46/</link>
      <pubDate>Thu, 31 May 2018 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2018/06/ansile-updates-46/</guid>
      <description>

&lt;h1 id=&#34;purpose-of-this-document&#34;&gt;Purpose of this document&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.redhat.com/cloudforms&#34;&gt;CloudForms&lt;/a&gt; 4.6 and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ Gaprindashvili&lt;/a&gt; give us some improvements in handling the embedded Ansible capabilities.&lt;/p&gt;

&lt;p&gt;I published a mini series of articles on the &lt;a href=&#34;http://cloudformsblog.redhat.com&#34;&gt;official Red Hat CloudForms blog&lt;/a&gt; demonstrating those new features.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cloudformsblog.redhat.com/2018/05/29/ansible-custom-buttons-in-cloudforms-part-1-configuring-the-environment/&#34;&gt;Ansible Custom Buttons in CloudForms (Part 1 configuring the environment)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://cloudformsblog.redhat.com/2018/05/31/ansible-custom-buttons-in-cloudforms-part-2-creating-the-button/&#34;&gt;Ansible Custom Buttons in CloudForms (Part 2 creating the button)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CloudForms labs at Red Hat Summit</title>
      <link>http://www.jung-christian.de/post/2018/04/summit/</link>
      <pubDate>Wed, 04 Apr 2018 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2018/04/summit/</guid>
      <description>

&lt;p&gt;I will run two labs during Red Hat Summit 2018 in San Francisco with some of my colleagues. Feel free to check the agenda and register, or just drop by and say hello.&lt;/p&gt;

&lt;h1 id=&#34;red-hat-cloudforms-with-red-hat-ansible-automation-better-together&#34;&gt;Red Hat CloudForms with Red Hat Ansible Automation—Better together&lt;/h1&gt;

&lt;p&gt;Have you heard about the embedded Ansible theme of Red Hat CloudForms? Keen to learn more? Join us in this lab session for hands-on exercises utilizing Red Hat Ansible Automation in CloudForms.&lt;/p&gt;

&lt;p&gt;In this lab, we&amp;rsquo;ll start with a brief overview presentation. Then, you will configure your CloudForms instance for embedded Ansible Automation and add a playbook repository. Next, you will learn how to use Ansible Playbooks to create service catalog items for the CloudForms self-service portal. Finally, you will use Ansible Playbooks as actions in CloudForms Policies and finally learn how playbooks can be run from custom buttons.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://agenda.summit.redhat.com/SessionDetail.aspx?id=154447&#34;&gt;More Details&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;building-a-self-service-portal-with-red-hat-cloudforms&#34;&gt;Building a self-service portal with Red Hat CloudForms&lt;/h1&gt;

&lt;p&gt;User self-service is seen as one of the defining capabilities of cloud computing. Red Hat CloudForms provides a self-service portal and catalog to deploy IT services over a variety of virtualization and cloud providers.&lt;/p&gt;

&lt;p&gt;In this lab, you will get an introduction to CloudForms self-service, followed by hands-on examples. You will start by creating a service catalog item to deploy a virtual machine and then move on to more advanced topics, like orchestration templates (OpenStack HEAT) as services. To be ready to use these features in real-world scenarios, you will learn how to limit catalog visibility and access with CloudForms&amp;rsquo; role-based access control feature.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://agenda.summit.redhat.com/SessionDetail.aspx?id=154446&#34;&gt;More Details&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to delete an obsolete Appliance</title>
      <link>http://www.jung-christian.de/post/2018/01/delete-appliance/</link>
      <pubDate>Thu, 11 Jan 2018 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2018/01/delete-appliance/</guid>
      <description>

&lt;h1 id=&#34;purpose-of-this-document&#34;&gt;Purpose of this document&lt;/h1&gt;

&lt;p&gt;The architecture of &lt;a href=&#34;http://www.redhat.com/cloudforms/&#34;&gt;CloudForms&lt;/a&gt; or &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ&lt;/a&gt; allows you to easily scale out by adding additional appliances when needed. This could be used to accommodate growth of the managed infrastructure, better security isolation or increased availability requirements. This can easily be done by joining an appliance to an existing region as documented in the &lt;a href=&#34;http://manageiq.org/docs/reference/&#34;&gt;ManageIQ&lt;/a&gt; or &lt;a href=&#34;https://docs.redhat.com&#34;&gt;Red Hat&lt;/a&gt; Documentation. There is an example if you &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_cloudforms/4.6-beta/html/installing_red_hat_cloudforms_on_red_hat_virtualization/configuring-cloudforms#configuring-a-worker-appliance&#34;&gt;deploy CloudForms on Red Hat Virtualization&lt;/a&gt;. The process is the same for all providers.&lt;/p&gt;

&lt;p&gt;Occasionally you also have to scale down and delete no longer needed appliances as well. This is very simple as well.&lt;/p&gt;

&lt;h2 id=&#34;considerations&#34;&gt;Considerations&lt;/h2&gt;

&lt;p&gt;The process described here works for simple &amp;ldquo;worker&amp;rdquo; appliances. If you&amp;rsquo;re not familiar with the architecture, there is a very good &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_cloudforms/4.5/html/deployment_planning_guide/&#34;&gt;Deployment Planning Guide&lt;/a&gt; which describes the architecture in detail.&lt;/p&gt;

&lt;p&gt;Deleting database appliances might require additional preparation, which is not covered in this article. There might also be additional steps necessary in your particular environment, like adjust backup procedures, monitoring, or configuration files outside CloudForms or ManageIQ.&lt;/p&gt;

&lt;h2 id=&#34;delete-an-appliance&#34;&gt;Delete an appliance&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;If you have the necessary privileges, click on your user name on the top right of the screen and &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on &lt;strong&gt;&lt;em&gt;Diagnostics&lt;/em&gt;&lt;/strong&gt; in the accordion on the left&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on the Zone the appliance belongs to, in the example below you can see two appliances&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/delete-appliance-select-zone.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/delete-appliance-select-zone-300x162.png&#34; alt=&#34;Select Zone&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In the view &amp;ldquo;Roles by Server&amp;rdquo; select the appliance which will be deleted&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/delete-appliance-select-appliance.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/delete-appliance-select-appliance-300x332.png&#34; alt=&#34;Select Appliance&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Delete Server NAME&lt;/em&gt;&lt;/strong&gt;, NAME being the name of the appliance which should be deleted. IN this example &amp;ldquo;Appliance-2&amp;rdquo; will be deleted.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/delete-appliance-configuration-delete.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/delete-appliance-configuration-delete-300x125.png&#34; alt=&#34;Delete Appliance&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the background the action will be performed and the Appliance will be removed from the configuration.&lt;/p&gt;

&lt;p&gt;Finally you can just delete the actual virtual machine as usual.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Enforce SELinux Compliance Policy with Ansible</title>
      <link>http://www.jung-christian.de/post/2017/12/enforce-selinux-with-ansible/</link>
      <pubDate>Thu, 14 Dec 2017 12:00:00 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/12/enforce-selinux-with-ansible/</guid>
      <description>

&lt;h1 id=&#34;enforce-compliance&#34;&gt;Enforce Compliance&lt;/h1&gt;

&lt;p&gt;In a recent article about how to write a &lt;a href=&#34;http://www.jung-christian.de/post/2017/10/control-policy-selinux/&#34;&gt;SELinux Compliance Policy&lt;/a&gt; you learned how to use &lt;a href=&#34;http://www.redhat.com/cloudforms&#34;&gt;CloudForms&lt;/a&gt;&amp;rsquo; and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ&lt;/a&gt;&amp;rsquo;s capability to perform compliance checks. This article goes one step further: Instead of just reporting compliance or non-compliance of a given virtual machine, we use the power of Ansible to enforce compliance.&lt;/p&gt;

&lt;p&gt;This example builds on the Compliance and Control policy described in the mentioned article and it is recommended to read it first.&lt;/p&gt;

&lt;h1 id=&#34;compliance-policies&#34;&gt;Compliance Policies&lt;/h1&gt;

&lt;p&gt;Enterprises often have rules and regulations about system compliance. This could include a specific baseline configuration, for example hardening rules. It could also include other requirements, like backup and monitoring has to be configured, a proper license has to be available (particularly with proprietary software) and more. Compliance checks in CloudForms and ManageIQ can bundle these requirements into policy profiles.&lt;/p&gt;

&lt;p&gt;If one or more of the requirements is not met, actions can be triggered. The most obvious and most simple to implement is to mark the system as being &amp;ldquo;non compliant&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/system-non-compliant.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/system-non-compliant-300x58.png&#34; alt=&#34;System is not compliant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Compliance policies can also trigger other actions, including running an Ansible Playbook or perform a custom method, which allows us to run our own (Ruby) Method as an action.&lt;/p&gt;

&lt;h1 id=&#34;ansible-playbook-as-an-action&#34;&gt;Ansible Playbook as an Action&lt;/h1&gt;

&lt;p&gt;Coming back to the problem at hand, an error in the SELinux configuration, Ansible would be the logical tool choice to fix the system configuration. There are two options available to run Ansible Playbooks from CloudForms or ManageIQ:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Embedded Ansible: Since &lt;a href=&#34;http://www.redhat.com&#34;&gt;CloudForms 4.5&lt;/a&gt; and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ Fine&lt;/a&gt; there a built in native capability to run Ansible Playbooks&lt;/li&gt;
&lt;li&gt;Ansible Tower: Since &lt;a href=&#34;http://www.redhat.com&#34;&gt;CloudForms 4.1&lt;/a&gt; and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ Darga&lt;/a&gt; we can run Ansible Playbook from &lt;a href=&#34;https://www.ansible.com/tower&#34;&gt;Ansible Tower&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;running-ansible-playbook-from-tower&#34;&gt;Running Ansible Playbook from Tower&lt;/h2&gt;

&lt;p&gt;A GitLab repository with &lt;a href=&#34;https://gitlab.com/cjung/cloudforms-playbooks.git&#34;&gt;CloudForms Ansible Playbooks&lt;/a&gt; optimized for the usage with CloudForms and ManageIQ has to be added to Tower first. This repository contains a Playbooks called &amp;ldquo;&lt;a href=&#34;https://gitlab.com/cjung/cloudforms-playbooks/raw/master/Playbooks/selinux-enforcing.yaml&#34;&gt;selinux-enforcing&lt;/a&gt;&amp;rdquo; which makes sure the SELinux modus is set to &amp;ldquo;Enforcing&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;After adding the repository and running an initial sync, a Job Template has to be created, which runs the previously imported Playbook. Make sure the following requirements are met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Job Template Name: make sure you use the name &amp;ldquo;Fix SELinux&amp;rdquo;. If you want to use another name, the Compliance Policy imported later, has to be adjusted accordingly&lt;/li&gt;
&lt;li&gt;Check &amp;ldquo;Prompt on Launch&amp;rdquo; for the Limit parameter: During Playbook execution CloudForms or ManageIQ will set the limit parameter dynamically to the correct value to ensure the Playbook is only executed on the non compliant system and not the entire inventory. If this box is not checked (enabled), the limit parameter set by CloudForms or ManageIQ will be ignored by Ansible Tower - and the Playbook will be executed on the entire inventory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next we force an update of the Ansible Tower inventory. Navigate to &lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Ansible Tower&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Explorer&lt;/em&gt;&lt;/strong&gt;. Select your Tower Provider and click on &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Refresh Relationships and Power State&lt;/em&gt;&lt;/strong&gt;. Such a refresh is executed in the background and can take a minute or two. Eventually the new Job Template should show up in the accordion on the left.&lt;/p&gt;

&lt;h3 id=&#34;create-a-new-action&#34;&gt;Create a new Action&lt;/h3&gt;

&lt;p&gt;To trigger an execution of an Ansible Playbook from a Control or Compliance Policy, we first have to create a new Action. Navigate to &lt;strong&gt;&lt;em&gt;Control&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Explorer&lt;/em&gt;&lt;/strong&gt;. In the accordion on the left, click on &lt;strong&gt;&lt;em&gt;Actions&lt;/em&gt;&lt;/strong&gt; and from there &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Add a new Action&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Description: Fix SELinux&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Action Type: Invoke a Custom Automation&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Message: create&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Request: ansible_tower_job&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Attribute 1: job_template_name&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Value 1: Fix SElinux&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; The Name &amp;ldquo;Fix SELinux&amp;rdquo; has to match the name of the Job Template definition in Ansible Tower, or the Action will fail.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/create-action-fix-selinux.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/create-action-fix-selinux-300x114.png&#34; alt=&#34;Create Fix SELinux Action&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;running-ansible-playbook-natively&#34;&gt;Running Ansible Playbook natively&lt;/h2&gt;

&lt;p&gt;If you want to use the native support to run Ansible Playbooks, it&amp;rsquo;s important to make sure the Embedded Ansible Role is enabled. Without this Role properly running, Ansible Playbooks can not be executed and it is not even possible to add an Ansible Playbook Repository. A good article summarizing the how to &lt;a href=&#34;https://cloudformsblog.redhat.com/2017/12/07/debugging-ansible-automation-inside-red-hat-cloudforms/&#34;&gt;Debug Ansible Automation inside Red Hat CloudForms&lt;/a&gt; has just been published by my buddy &lt;a href=&#34;https://twitter.com/victorestival&#34;&gt;Victor&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After ensuring the Role is properly configured, add the &lt;a href=&#34;https://gitlab.com/cjung/cloudforms-playbooks.git&#34;&gt;CloudForms Ansible Playbooks&lt;/a&gt; repository found on GitLab.&lt;/p&gt;

&lt;p&gt;This blog post is not going into details on how to do this. I already created a lab called &lt;a href=&#34;https://github.com/cbolz/rhte-fy18/blob/master/getting-well-with-cloudforms/index.md&#34;&gt;Getting well with CloudForms&lt;/a&gt; which covers the embedded Ansible capbilities.&lt;/p&gt;

&lt;h1 id=&#34;updating-the-compliance-policy&#34;&gt;Updating the Compliance Policy&lt;/h1&gt;

&lt;p&gt;To use the previously created Action in the Compliance Policy, navigate to &lt;strong&gt;&lt;em&gt;Control&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Explorer&lt;/em&gt;&lt;/strong&gt; first. Then navigate to the Compliance Policy and the respective event. Add the Action you created in the previous step to the &amp;ldquo;Order of Actions if ANY Conditions are False&amp;rdquo; list.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/list-of-actions-selinux-policy.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/list-of-actions-selinux-policy-300x78.png&#34; alt=&#34;Updated actions on fail&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I uploaded an example &lt;a href=&#34;https://raw.githubusercontent.com/cbolz/ManageIQ/master/control-policies/VM-Security-Profile-with-Ansible-Action.yaml&#34;&gt;VM-Security-Profile-with-Ansible-Action&lt;/a&gt; on &lt;a href=&#34;https://github.com/cbolz/ManageIQ/tree/master/control-policies&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;testing-and-conclusion&#34;&gt;Testing and Conclusion&lt;/h1&gt;

&lt;p&gt;You should now have a combination of the following poclies:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;A Control Policy &amp;ldquo;Run SmartState&amp;rdquo; which will schedule a Smart State Analysis scan in the background if a VM is powered on or reset&lt;/li&gt;
&lt;li&gt;A Control Policy &amp;ldquo;Check Compliance&amp;rdquo; which will trigger a Compliance Check every time a VM completed Smart State Analysis&lt;/li&gt;
&lt;li&gt;A Compliance Policy &amp;ldquo;Check SELinux Policy&amp;rdquo; which verifies SELinux is configured in Enforcing mode, and if not, marks the VM as non compliant and runs an Ansible Playbook to fix the configuration error&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To do a test run, you can either power on a VM, or &amp;ldquo;Perform Smart State Analysis&amp;rdquo; from the VM &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt; menu.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CRUD for Custom Attributes in CloudForms or ManageIQ</title>
      <link>http://www.jung-christian.de/post/2017/12/custom-attributes/</link>
      <pubDate>Wed, 06 Dec 2017 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/12/custom-attributes/</guid>
      <description>

&lt;h1 id=&#34;custom-attributes-in-cloudforms-and-manageiq&#34;&gt;Custom attributes in CloudForms and ManageIQ&lt;/h1&gt;

&lt;p&gt;One of the nice features CloudForms and ManageIQ provide, is the automated discovery of the existing infrastructure. The collected information is stored in the database (often called the VMDB) and regularly updated. Sometimes we want to store additional information for specific objects as well. Although the database is not intended to be or to replace a CMDB, it is still a valid option for storing additional data.&lt;/p&gt;

&lt;p&gt;If an object has custom attributes associated and stored in the database, the attribute and the value are automatically shown in the UI. Unfortunately there is no capability to create, update or delete custom attributes from the Web UI. Since we can extend the out of the box functionality easily, we can add the missing capabilities by ourselves.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/custom-attribute-buttons.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/custom-attribute-buttons-300x38.png&#34; alt=&#34;Additional buttons to manage custom attributes&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;automate-code&#34;&gt;Automate Code&lt;/h2&gt;

&lt;p&gt;To implement the core functionality, Automate already provides the necessary methods:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;custom_get(key): returns the value of the custom attribute with name &amp;ldquo;key&amp;rdquo;&lt;/li&gt;
&lt;li&gt;custom_keys: returns an array of all custom attributes for the given object&lt;/li&gt;
&lt;li&gt;custom_set(key,value): stores the specified value in the custom attribute key&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The Automate code to implement these features can be found in my &lt;a href=&#34;https://gitlab.com/cjung/automate.git&#34;&gt;Gitlab&lt;/a&gt; repository. On top of the necessary methods to create and delete custom attributes, you&amp;rsquo;ll find some methods to create dynamic dialogs with the list of available custom attributes.&lt;/p&gt;

&lt;p&gt;There is no method for &amp;ldquo;update&amp;rdquo;, since the custom_set method works for new and existing custom attributes. There is also no method for &amp;ldquo;delete&amp;rdquo;. To delete a custom attribute, just overwrite the current value with an empty string.&lt;/p&gt;

&lt;h2 id=&#34;service-dialogs&#34;&gt;Service Dialogs&lt;/h2&gt;

&lt;p&gt;To make it easy for the end user to consume these features, Service Dialogs can be created. The Gitlab repository also contains examples for this.&lt;/p&gt;

&lt;p&gt;Create custom attributes:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/create-custom-attribute.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/create-custom-attribute-300x113.png&#34; alt=&#34;Create custom attribute&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Update custom attributes:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/update-custom-attribute.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/update-custom-attribute-300x117.png&#34; alt=&#34;Update customa ttribute&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Delete custom attribute:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/delete-custom-attribute.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/delete-custom-attribute-300x82.png&#34; alt=&#34;Dalete Custom Attribute&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Service Dialogs can be imported by navigting to &lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Automate&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Customization&lt;/em&gt;&lt;/strong&gt;. From there click &lt;strong&gt;&lt;em&gt;Import/Export&lt;/em&gt;&lt;/strong&gt; on the accordion on the left and import the files one by one.&lt;/p&gt;

&lt;h2 id=&#34;buttons&#34;&gt;Buttons&lt;/h2&gt;

&lt;p&gt;Finally we need to create custom buttons which call the Service Dialogs and the backend logic. In the current release, buttons can not be imported or exported, so we have to create them manually.&lt;/p&gt;

&lt;p&gt;First navigate to &lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Automate&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Customization&lt;/em&gt;&lt;/strong&gt;. Click on &lt;strong&gt;&lt;em&gt;Buttons&lt;/em&gt;&lt;/strong&gt; in the accordion on the left. To make the provisded example work, you have to create the buttons on the &lt;strong&gt;&lt;em&gt;VM and Instance&lt;/em&gt;&lt;/strong&gt; tree. Click on it and then &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Add a new Button Group&lt;/em&gt;&lt;/strong&gt;. Give it a good name and description and select an Button Group Image.&lt;/p&gt;

&lt;p&gt;Create the button for new custom attributes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Button Text: &amp;ldquo;Create new Attribute&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Button Hover Text: &amp;ldquo;Create new custom attribute&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Button Image: Choose and icon&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Dialog: &amp;ldquo;Create Custom Attribute&amp;rdquo; (only works if you successfully import the provided dialogs in the previous step)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Request: create_custom&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/button-create-new-attribute.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/button-create-new-attribute-300x226.png&#34; alt=&#34;Create new attribute&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create the button for updating custom attributes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Button Text: &amp;ldquo;Update Custom Attribute&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Button Hover Text: &amp;ldquo;edit an existing custom attribute&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Button Image: Choose and icon&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Dialog: &amp;ldquo;Update Custom Attribute&amp;rdquo; (only works if you successfully import the provided dialogs in the previous step)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Request: update_custom&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/button-update-attribute.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/button-update-attribute-300x220.png&#34; alt=&#34;Update attribute&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Create the button for deleting custom attributes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Button Text: &amp;ldquo;Delete Custom Attribute&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Button Hover Text: &amp;ldquo;Delete a custom attribute and the stored value&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Button Image: Choose and icon&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Dialog: &amp;ldquo;Delete Custom Attribute&amp;rdquo; (only works if you successfully import the provided dialogs in the previous step)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Request: delete_custom&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/button-delete-custom-attribute.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/button-delete-custom-attribute-300x227.png&#34; alt=&#34;Delete custom attribute&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;role-based-access-control&#34;&gt;Role based access control&lt;/h3&gt;

&lt;p&gt;There is a very powerful and flexible Role Based Access Control (RBAC) feature available which can also be used for custom buttons. If you scroll down to the very button of the &amp;ldquo;Add new Button&amp;rdquo; screen, you&amp;rsquo;ll see a drop down list where you can change the &lt;strong&gt;&lt;em&gt;Visibility&lt;/em&gt;&lt;/strong&gt;. If set to &lt;strong&gt;&lt;em&gt;by Role&lt;/em&gt;&lt;/strong&gt;, we can grant access to each individual button for specific roles.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Retrieve MAC Address from SCVMM</title>
      <link>http://www.jung-christian.de/post/2017/11/scvmm-get-mac/</link>
      <pubDate>Mon, 20 Nov 2017 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/11/scvmm-get-mac/</guid>
      <description>

&lt;h1 id=&#34;purpose-of-this-document&#34;&gt;Purpose of this document&lt;/h1&gt;

&lt;p&gt;To provision Virtual Machines from &lt;a href=&#34;http://www.redhat.com/cloudforms/&#34;&gt;CloudForms&lt;/a&gt; or &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ&lt;/a&gt; by utilizing &lt;a href=&#34;http://www.theformen.org&#34;&gt;the Foreman&lt;/a&gt;, the MAC Address of the new system has to be specified. Due to this &lt;a href=&#34;https://bugzilla.redhat.com/1514461&#34;&gt;Bugzilla&lt;/a&gt;, the MAC address is unfortunately not in the VMDB right now.&lt;/p&gt;

&lt;p&gt;I wrote a small script which uses WinRM and PowerShell to retrieve the MAC address and store it in the State Machine. How to store and retrieve variables has been documented before in the article &lt;a href=&#34;http://www.jung-christian.de/post/2015/03/preserve-data-in-manageiq-state-machines/index.html&#34;&gt;Preserve data in ManageIQ state machines&lt;/a&gt; A modified version of the register_foreman script fetches the MAC address from the variable, instead of the actual Virtual Machine.&lt;/p&gt;

&lt;p&gt;An Automate Domain containing both changes can be found on &lt;a href=&#34;https://gitlab.com/cjung/automate.git&#34;&gt;GitLab&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;how-it-works&#34;&gt;How it works&lt;/h1&gt;

&lt;p&gt;The provided method is supposed to be part of the VM provisioning state machine for SCVMM. It will retrieve the MAC address from the SCVMM provider by using PowerShell. The returned MAC address is stored in a state variable so it can be retrieved later.&lt;/p&gt;

&lt;p&gt;The VM Provisioning state machine has the following modifications:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Disable VM auto start (microsoft_CustomizeRequest)&lt;/li&gt;
&lt;li&gt;Retrieve MAC Address from SCVMM (get_mac)&lt;/li&gt;
&lt;li&gt;Register VM in Foreman/Satellite 6 (register_foreman)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As said before, after the Bugzilla is fixed, the get_mac method should not be necessary anymore.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Continuous Integration with CloudForms or ManageIQ</title>
      <link>http://www.jung-christian.de/post/2017/11/continuous-integration-with-automate/</link>
      <pubDate>Fri, 10 Nov 2017 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/11/continuous-integration-with-automate/</guid>
      <description>

&lt;h1 id=&#34;purpose-of-this-document&#34;&gt;Purpose of this document&lt;/h1&gt;

&lt;p&gt;CloudForms and ManageIQ have an embedded editor which allows you to write and edit Automate code. This is convenient and easy to use for smaller modifications. As soon as you want to work on larger projects, you probably want more:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;history: be able to go back to previous versions of your code&lt;/li&gt;
&lt;li&gt;branches: be able to create branches for test features or specific bug fixes&lt;/li&gt;
&lt;li&gt;better editor: the built in HTML editor is good enough for simple coding, but eventually you might want to use a more sophisticated editor. Popular editors amongst CloudForms users are Sublime, Atom, Visual Studio Code, or maybe just your optimized configuration of VI or Emacs.&lt;/li&gt;
&lt;li&gt;logs: as soon as you collaborate working on Automate code, you want to be able to see how did which change&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Automate code can not only be written in the built in HTML editor, it can also be imported from a Git repository. For continuous integration, the REST API can be used to trigger a refresh every time new code is committed.&lt;/p&gt;

&lt;h1 id=&#34;the-setup&#34;&gt;The setup&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://github.com&#34;&gt;GitHub&lt;/a&gt; and &lt;a href=&#34;http://gitlab.com&#34;&gt;GitLab&lt;/a&gt; are probably the most popular tools for Open Source Source Code Management tools currently used. The example below will work with either one of them, and should also work with any Git/CI combination, but might require some additional steps.&lt;/p&gt;

&lt;p&gt;For the example below, GitLab is used, since it has builtin CI/CD features. If you prefer GitHub, the following instructions should work as well, but you might need an additional tool, for example &lt;a href=&#34;http://www.travis-ci.org&#34;&gt;Travis CI&lt;/a&gt;, for the CI part.&lt;/p&gt;

&lt;p&gt;Every time new code is committed to the Git repository, a CI/CD Tool will detect that change and use an CloudForms API call to trigger a refresh. As a consequence, the script which is running on the CI/CD server must be able to open a TCP connection on port 443 to the CloudForms appliance by using its IP address or DNS name.&lt;/p&gt;

&lt;h1 id=&#34;adding-a-git-repository&#34;&gt;Adding a Git repository&lt;/h1&gt;

&lt;p&gt;Create your Git repository with your Automate code. It is easier if you start with an existing repository, which actually already has some code checked in.&lt;/p&gt;

&lt;p&gt;Before you can add a Git repository, the necessary role has to be enabled. Click on the top right menu which shows your user name and then &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt;. Make sure you enable the &amp;ldquo;Git Repositories Owner&amp;rdquo; role (you might have to scroll down to see all the roles, depending on your screen resolution).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/enable-git-repo-role.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/enable-git-repo-role-300x138.png&#34; alt=&#34;Enable Git Repositories Role&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It can take a few moments for the services to start in the background.&lt;/p&gt;

&lt;p&gt;Navigate to &lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Automate&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Import/Export&lt;/em&gt;&lt;/strong&gt;. If the submit button is still greyed out, the role has not been activated yet. The question mark icon next to the submit button will give you an according hint. in this case wait another minute and reload the page.&lt;/p&gt;

&lt;p&gt;From your Git repository, copy the HTML URL (SSH will not work). Paste the URL into the &amp;ldquo;Git URL&amp;rdquo; field.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; A Git URL is pointing to a file with the suffix .git. For example, the Git URL for the repository used for this example is &lt;a href=&#34;https://gitlab.com/cjung/automate.git&#34;&gt;https://gitlab.com/cjung/automate.git&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Username and Password are optional, as indicated in the UI. If you have a public repository on GitLab or GitHub, you will not need it. For private repositories, the user credentials have to be provided. CloudForms or ManageIQ will only need privileges to pull code, so a read only account is enough.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/git-repo-credentials.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/git-repo-credentials-300x285.png&#34; alt=&#34;Provide details for Git repository&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After clicking on &lt;strong&gt;&lt;em&gt;Submit&lt;/em&gt;&lt;/strong&gt; it can take a few seconds before you see the next screen. During this delay, CloudForms/ManageIQ will try to access the repository and check if it can find an valid Automate repository.&lt;/p&gt;

&lt;p&gt;If successful, the next screen will allow you to chose which tag or branch you want to checkout. For this example, we use the master branch.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/select-branch-or-tag.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/select-branch-or-tag-300x160.png&#34; alt=&#34;Select Branch or Tag&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The import can once more take a few seconds, after which you should get a message, the import was successful.&lt;/p&gt;

&lt;h2 id=&#34;verify-the-new-automate-domain&#34;&gt;Verify the new Automate domain&lt;/h2&gt;

&lt;p&gt;Navigate to &lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Automate&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Explorer&lt;/em&gt;&lt;/strong&gt; to see the domain after the import. Note that the domain is always read only. Code has to be changed in Git and can not be changed in the builtin editor anymore.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/git-domain.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/git-domain-300x65.png&#34; alt=&#34;Automate Domain coming from Git&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After clicking on the Domain, a refresh can be initiated from the &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt; menu and &lt;strong&gt;&lt;em&gt;Refresh with new branch or tag&lt;/em&gt;&lt;/strong&gt;. This can also be used to change the branch or tag used to retrieve the code from Git.&lt;/p&gt;

&lt;h1 id=&#34;create-a-locked-down-role&#34;&gt;Create a locked down role&lt;/h1&gt;

&lt;p&gt;So far we have manually imported Automate code from an existing Git repository. For a continuous integration workflow, we need an automatism to update the code in CloudForms, every time we commit a change to Git.&lt;/p&gt;

&lt;p&gt;To be able to accomplish this, we need a user with the necessary privileges to refresh the Automate domain. This user has to log into CloudForms and perform a refresh by sending an API call.&lt;/p&gt;

&lt;p&gt;For security reasons, it is advised to create an account with restricted privileges. Fortunately CloudForms allows us to create a user which can only perform a refresh, but no other action.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Navigate to &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt; by clicking on your username on the top right corner and click on &lt;strong&gt;&lt;em&gt;Access control&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click on &lt;strong&gt;&lt;em&gt;Roles&lt;/em&gt;&lt;/strong&gt; and open the &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt; menu and &lt;strong&gt;&lt;em&gt;Add a new Role&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Give the new role a name, for example &amp;ldquo;Git&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Disable all privileges by making sure the box next to &amp;ldquo;Everything&amp;rdquo; is disabled&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Drill into &lt;strong&gt;&lt;em&gt;Automation&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Automate&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Explorer&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Automate Domains&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Modify&lt;/em&gt;&lt;/strong&gt; and enable &lt;strong&gt;&lt;em&gt;Refresh&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/only-enable-automate-refresh.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/only-enable-automate-refresh-300x341.png&#34; alt=&#34;Only enable Automate Refresh privilege&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add the new role&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Navigate to &lt;strong&gt;&lt;em&gt;Groups&lt;/em&gt;&lt;/strong&gt;, click on &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Add a new Group&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Enter a description, for example &amp;ldquo;Git&amp;rdquo;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the previously created role in the &amp;ldquo;Role&amp;rdquo; drop down list&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the parent tenant&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/add-git-group.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/add-git-group-300x159.png&#34; alt=&#34;Add the new group&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add the new group&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Last but not least, navigate to &lt;strong&gt;&lt;em&gt;Users&lt;/em&gt;&lt;/strong&gt; and click on &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Add a new User&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fill in the fields for &amp;ldquo;Full Name&amp;rdquo; and &amp;ldquo;Username&amp;rdquo;, also set a password for the new user. Make sure to remember the username and password, since you will need both later. The email address is optional.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Make sure to select the previously created group in the &amp;ldquo;Group&amp;rdquo; drop down list&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/add-git-user.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/add-git-user-300x259.png&#34; alt=&#34;Add the new user&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add the new User.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;build-a-ci-pipeline&#34;&gt;Build a CI pipeline&lt;/h1&gt;

&lt;p&gt;The final piece in the puzzle is the script which is executed on the CI/CD server which triggers CloudForms to refresh the Automate domain.&lt;/p&gt;

&lt;h2 id=&#34;gitlab&#34;&gt;GitLab&lt;/h2&gt;

&lt;p&gt;This example is using GitLab:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a new file called &amp;ldquo;.gitlab-ci.yml&amp;rdquo; in the root directory of the git repository&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;job1:
  script:
    - curl -k -X POST -d&#39;{&amp;quot;action&amp;quot;:&amp;quot;refresh_from_source&amp;quot;}&#39; https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;FQDN or IP of CloudForms Appliance&amp;gt;/api/automate_domains/&amp;lt;name of Automate domain&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Save the file and commit it to the repository&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;travis-ci&#34;&gt;Travis CI&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a new file called &amp;ldquo;.travis.yml&amp;rdquo; in the root directory of the git repository&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;language: ruby

script:
- curl -k -X POST -d&#39;{&amp;quot;action&amp;quot;:&amp;quot;refresh_from_source&amp;quot;}&#39; https://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;FQDN or IP of CloudForms Appliance&amp;gt;/api/automate_domains/&amp;lt;name of Automate domain&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Save the file and commit it to the repository&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;testing&#34;&gt;Testing&lt;/h1&gt;

&lt;p&gt;After committing the build script, you can start doing changes to your Automate repository. Every time you commit a change, the build script should be executed and refresh the Automate domain.&lt;/p&gt;

&lt;p&gt;Note that it can take a few seconds unless the CI/CD server detects the change and they show up in CloudForms.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Best Practice recommendations for Automate</title>
      <link>http://www.jung-christian.de/post/2017/10/automate-best-practice/</link>
      <pubDate>Tue, 10 Oct 2017 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/10/automate-best-practice/</guid>
      <description>

&lt;h1 id=&#34;purpose-of-this-document&#34;&gt;Purpose of this document&lt;/h1&gt;

&lt;p&gt;The idea of this document is to collaboratively collect coding style recommendations and best practices to give guidance on how to use Automate in &lt;a href=&#34;http://www.redhat.com/cloudforms&#34;&gt;CloudForms&lt;/a&gt; and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The following tips are meant for guidance and should give you some hints and ideas on how to do things “the clean way”. There are always exceptions from those rules. This document does not claim to be complete but should provide some recommendations and guidance. Feedback is, as always, very much appreciated.&lt;/p&gt;

&lt;h1 id=&#34;naming-convention&#34;&gt;Naming Convention&lt;/h1&gt;

&lt;h2 id=&#34;name-spaces&#34;&gt;Name spaces&lt;/h2&gt;

&lt;p&gt;To “overload” existing code from other domains it is necessary to keep the structure of name spaces, classes, methods and instances identical. Custom name spaces should follow the existing structure.&lt;/p&gt;

&lt;p&gt;For example integration code into external (third party) software should follow the structure used in the Red Hat/Integration domain.&lt;/p&gt;

&lt;p&gt;Proposed structure:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ├── ConfigurationManagement (Namespace (NS)
    │   ├── Ansible (Class)
    │   │   ├── instance1
    │   │   ├── instance2
    │   │   ├── method1
    │   │   └── method2
    │   └── Foreman (Class)
    │     ├── create (Instance/Method)
    │     ├── delete (Instance/Method)
    │     ├── read (Instance/Method)
    │     ├── Instance/Method
    │     └── update (Instance/Method)
    ├── RedHat (NS)
    │   ├── OpenStack (NS)
    │   │   ├── Cinder (Class)
    │   │   │   ├── create (Instance/Method)
    │   │   │   ├── delete (Instance/Method)
    │   │   │   ├── read (Instance/Method)
    │   │   │   └── update (Instance/Method)
    │   │   ├── LBaaS (Class)
    │   │   │   ├── create (Instance/Method)
    │   │   │   ├── delete (Instance/Method)
    │   │   │   ├── read (Instance/Method)
    │   │   │   └── update (Instance/Method)
    │   │   └── Snapshots (Class)
    │   │     ├── create (Instance/Method)
    │   │     ├── delete (Instance/Method)
    │   │     ├── read (Instance/Method)
    │   │     └── update (Instance/Method)
    │   ├── RHEV (Class)
    │   └── Satellite (Class)
    └── Vendor (NS)
    ├── Application1 (Class)
    ├── Application2 (Class)
    └── Application3 (Class)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;more-details&#34;&gt;More Details&lt;/h3&gt;

&lt;p&gt;Miscellaneous tips in &lt;a href=&#34;https://pemcg.gitbooks.io/introduction-to-cloudforms-automation/content/chapter23/miscellaneous_tips.html&#34;&gt;Peter McGowan&amp;rsquo;s Automate Book&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Instance names and methods should both be snake case, see also the discussion on the the &lt;a href=&#34;http://talk.manageiq.org/t/naming-and-the-style-guide/&#34;&gt;ManageIQ Forum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Developer Guides for &lt;a href=&#34;http://manageiq.org/docs/guides/architecture&#34;&gt;ManageIQ&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Discussion &lt;a href=&#34;https://github.com/ManageIQ/manageiq-content/issues/8&#34;&gt;Convert Automate Methods to new style using classes&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;working-with-domains&#34;&gt;Working with Domains&lt;/h2&gt;

&lt;p&gt;As a basic setup code and configuration details should be split into two domains. E.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    Customer-config
    Customer-code
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will make it easier to reuse the code at other customers or make it available in a source code repository (like git/SVN). Additional domains for staging might be useful in larger deployments.&lt;/p&gt;

&lt;p&gt;Example: (sorted by priority)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    Customer-config
    Customer-dev
    Customer-qa
    Customer-prod
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;production&#34;&gt;Production&lt;/h3&gt;

&lt;p&gt;Customer-prod contains already “released” code, this means this domain is a 1:1 copy of the one used in production. In the production environment the -dev and -qa domains don’t exist, are empty or disabled.&lt;/p&gt;

&lt;h3 id=&#34;qa&#34;&gt;QA&lt;/h3&gt;

&lt;p&gt;In the QA or test environment the &amp;ldquo;customer-prod&amp;rdquo; domain contains a 1:1 copy of the production domain, but is overloaded by the -qa domain. This allows testing of QA code in combination with existing production code. After all QA tests have been completed, the QA code moves into the production domain (leaving the QA domain empty).&lt;/p&gt;

&lt;h3 id=&#34;development&#34;&gt;Development&lt;/h3&gt;

&lt;p&gt;&amp;ldquo;Development&amp;rdquo; is following the same approach. It contains a 1:1 copy of -prod and -qa domains but is also overloaded by content from the -dev domain. This allows for development work to be based on current production and QA code, By separating -dev into a dedicated domain, the -dev domain can for example temporarily be disabled for root cause analysis or debugging purposes.&lt;/p&gt;

&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;

&lt;p&gt;Finally the -config domain contains &lt;em&gt;ALL&lt;/em&gt; configuration data. E.g. host names to external systems, login credentials, environment specific settings. There are dedicated -config domains for each stage which will never coexist (e.g. the -config domain for QA exclusively contains QA specific settings and never uses settings for production). Consequently there is no configuration information in any of the domains listed above.&lt;/p&gt;

&lt;p&gt;Depending on the specific needs more (e.g. Pre-Prod) or less domains (QA might not always be needed) can be used.&lt;/p&gt;

&lt;h1 id=&#34;git-integration&#34;&gt;Git integration&lt;/h1&gt;

&lt;p&gt;Automate Domains can be imported from Git (including but not limited to &lt;a href=&#34;http://gitlab.com&#34;&gt;Gitlab&lt;/a&gt; and &lt;a href=&#34;http://github.com&#34;&gt;GitHub&lt;/a&gt;). The &lt;a href=&#34;http://manageiq.org/docs/api&#34;&gt;REST API&lt;/a&gt; also provides a call to &lt;a href=&#34;http://manageiq.org/docs/reference/latest/api/reference/automate_domains#refresh-from-source&#34;&gt;refresh a specific Automate domain&lt;/a&gt;. This allows the integration with a CI/CD pipeline like Jenkins or Travis. A simple hook script can be used to trigger a refresh of the Automate Domain whenever new code is committed.&lt;/p&gt;

&lt;p&gt;The Role Based Access control can be used to create a specific role which only grants the privilege to trigger a domain refresh:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/automate-refresh-role.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/automate-refresh-role-300x214.png&#34; alt=&#34;RBAC role for Automate refresh&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Each Automate domain can be imported from a specific Git repository. CloudForms and ManageIQ also detects branches and tags which allows to be even more flexible.&lt;/p&gt;

&lt;p&gt;More information can be found in the &lt;a href=&#34;http://www.jung-christian.de/post/2017/11/continuous-integration-with-automate/&#34;&gt;Continuous Integration with CloudForms or ManageIQ Automate&lt;/a&gt; post.&lt;/p&gt;

&lt;h1 id=&#34;unit-testing&#34;&gt;Unit Testing&lt;/h1&gt;

&lt;p&gt;Automate methods can usually not be used outside of the context of CloudForms or ManageIQ. To increase code quality and use automated unit tests, it is recommended to write every method generic enough, so it can be called in the context of a state machine, a button, from Simulate and the REST API.&lt;/p&gt;

&lt;p&gt;Since it is now possible to call any method from REST, it is recommended to follow some coding best practices to accomplish this goal. More information can be found in the chapter &lt;a href=&#34;https://pemcg.gitbooks.io/introduction-to-cloudforms-automation/content/chapter10/ways_of_entering_automation.html&#34;&gt;Writing Generic Methods&lt;/a&gt; of the Automate Book. Examples for &lt;a href=&#34;https://pemcg.gitbooks.io/introduction-to-cloudforms-automation/content/chapter20/calling_automation_from_api.html&#34;&gt;using the REST API to call Automate&lt;/a&gt; can be found as well.&lt;/p&gt;

&lt;h2 id=&#34;limitations&#34;&gt;Limitations&lt;/h2&gt;

&lt;p&gt;Obviously some methods in Automate will not be able to do any reasonable tests without the appropriate context (e.g. a method which is used during provisioning can probably not provide a reasonable unit test if called without the context of a provisioned VM. )&lt;/p&gt;

&lt;h1 id=&#34;code-documentation-with-rdoc&#34;&gt;Code Documentation with RDoc&lt;/h1&gt;

&lt;p&gt;RDoc is part of Ruby and can automatically create documentation based on existing Ruby code. It analysis the code and tries to build the proper structure and relationships automatically.&lt;/p&gt;

&lt;p&gt;The use of RDoc in the context of Automate is somewhat limited though. Although CloudForms and ManageIQ are using Namespaces and Classes, this information is stored in YAML files and can not automatically be used by RDoc when it creates the documentation.&lt;/p&gt;

&lt;p&gt;In conclusion RDoc can still be used to create automated documentation, but requires some discipline from the developer and will not be able to automatically detect the namespace and class structure of Automate.&lt;/p&gt;

&lt;p&gt;More information about RDoc can be found in the &lt;a href=&#34;http://ruby-doc.org/stdlib-1.8.7/libdoc/rdoc/rdoc/index.html&#34;&gt;Ruby Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Custom Smart State Analysis Profiles</title>
      <link>http://www.jung-christian.de/post/2017/10/modify-ssa-profile/</link>
      <pubDate>Tue, 10 Oct 2017 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/10/modify-ssa-profile/</guid>
      <description>

&lt;h1 id=&#34;about-smart-state-analysis&#34;&gt;About Smart State Analysis&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.redhat.com/cloudforms&#34;&gt;CloudForms&lt;/a&gt; and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ&lt;/a&gt; have a feature called &amp;ldquo;Smart State Analysis&amp;rdquo; which allows them to analyse the disk of a Virtual Machine, Instance, Template or Image and retrieve data about the installed Operating System, applications, local groups and users and more. This is implemented completely without the need of additional agents and as a consequence is independent of the VM power state.&lt;/p&gt;

&lt;p&gt;Smart State can be also sued for Containers and Hypervisors, but the following example focuses on Virtual Machines.&lt;/p&gt;

&lt;h1 id=&#34;smart-state-analysis-profiles&#34;&gt;Smart State Analysis Profiles&lt;/h1&gt;

&lt;p&gt;A Smart State Analysis Profile defines which information is retrieved from the Virtual Machine. By default the following information is retrieved:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Services: Which services are installed (Works for Windows and Linux including SysV and SystemD)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;User Accounts: Retrieves information about local user and group accounts&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Software: Information about installed applications (on Windows retrieved from the registry, on Linux by running a query against the RPM or dpkg database)&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;VM Configuration and System: some additional information about the VM&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Administrators can create their own Analysis Profiles and define a list of additional files which should be retrieved. The Profile can either only check for the existence of the specified file, or also retrieve the content of the file.&lt;/p&gt;

&lt;h1 id=&#34;create-a-custom-smart-state-analysis-profile&#34;&gt;Create a custom Smart State Analysis Profile&lt;/h1&gt;

&lt;p&gt;It is very simple to create a customized Profile. Simply copy the out of the box &amp;ldquo;sample&amp;rdquo; Profile and name the copy &amp;ldquo;default&amp;rdquo;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;log into the appliance with administrator privileges&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;navigate to &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt; by clicking on the username on the top right corner&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;navigate to &lt;strong&gt;&lt;em&gt;Analysis Profiles&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;simple&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;click on &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Copy selected analysis profile&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/copy-analysis-profile.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/copy-analysis-profile-300x112.png&#34; alt=&#34;copy analysis profile&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;make sure the copy is called &amp;ldquo;default&amp;rdquo; and check or un-check the appropriate options&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/copy-ssa-profile.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/copy-ssa-profile-300x132.png&#34; alt=&#34;name the profile default&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If the Profile is not called &amp;ldquo;default&amp;rdquo; it will not be used unless it is explicitly assigned. Read the chapter &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_cloudforms/4.5/html/assigning_a_custom_analysis_profile_to_a_virtual_machine/index&#34;&gt;Assigning a Custom Analysis Profile to a Virtual Machine&lt;/a&gt; in the CloudForms Documentation for more details.&lt;/p&gt;

&lt;h1 id=&#34;modify-the-smart-state-analysis-profile&#34;&gt;Modify the Smart State Analysis Profile&lt;/h1&gt;

&lt;p&gt;To show how this feature works, add an additional file. In the example below, the content of /etc/sysconfig/selinux is retrieved during Smart State Analysis. There is another blog post about &lt;a href=&#34;../control-policy-selinux/&#34;&gt;How to create a Compliance Policy to enforce SELinux mode&lt;/a&gt; illustrating why this can be useful.&lt;/p&gt;

&lt;p&gt;Edit the previously created State Analysis Profile:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;log into the appliance with administrator privileges&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;navigate to &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt; by clicking on the username on the top right corner&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;navigate to &lt;strong&gt;&lt;em&gt;Analysis Profiles&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;default&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;click on the tab &lt;strong&gt;&lt;em&gt;file&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;add a new line:&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Name:&lt;/em&gt;&lt;/strong&gt; /etc/sysconfig/selinux&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Collect Contents?&lt;/em&gt;&lt;/strong&gt; click (check the box)&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/add-selinux-to-analysis-profile.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/add-selinux-to-analysis-profile-300x95.png&#34; alt=&#34;Add selinux to Analysis Profile&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;&lt;em&gt;save&lt;/em&gt;&lt;/strong&gt; on the right in the same row of the table&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;click &lt;strong&gt;&lt;em&gt;Add&lt;/em&gt;&lt;/strong&gt; to save all modifications&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Note:&lt;/em&gt;&lt;/strong&gt; It is important the name of the Profile is &amp;ldquo;default&amp;rdquo;. To use a different Profile name, check the chapter &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_cloudforms/4.5/html/assigning_a_custom_analysis_profile_to_a_virtual_machine/index&#34;&gt;Assigning a Custom Analysis Profile to a Virtual Machine&lt;/a&gt; in the CloudForms Documentation for more information.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SELinux Compliance Policy</title>
      <link>http://www.jung-christian.de/post/2017/10/control-policy-selinux/</link>
      <pubDate>Tue, 10 Oct 2017 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/10/control-policy-selinux/</guid>
      <description>

&lt;h1 id=&#34;compliance-policies&#34;&gt;Compliance Policies&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.redhat.com/cloudforms&#34;&gt;CloudForms&lt;/a&gt; and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ&lt;/a&gt; allow the definition of Compliance Policies which can be used to verify consistency of Virtual Machines, Instances, Hypervisors and other objects, in the entire environment. Compliance Policies can  trigger actions to be able to notify about non-compliance or to go one step further and enforce compliance, for example by using Ansible Playbooks to fix the problem.&lt;/p&gt;

&lt;p&gt;There are a number of examples about Compliance Policies on the &lt;a href=&#34;http://cloudformsblog.redhat.com/tag/compliance/&#34;&gt;official Red Hat CloudForms blog&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;adjust-the-smart-state-analysis-profile&#34;&gt;Adjust the Smart State Analysis Profile&lt;/h1&gt;

&lt;p&gt;A separate blog post goes into details on how to &lt;a href=&#34;../modify-ssa-profile/&#34;&gt;create and modify a Smart State Analysis Profile&lt;/a&gt;. When creating the profile, it is important its name is &amp;ldquo;default&amp;rdquo; and the policy retrieves the content of the file /etc/sysconfig/selinux.&lt;/p&gt;

&lt;h1 id=&#34;control-policies&#34;&gt;Control Policies&lt;/h1&gt;

&lt;p&gt;Policies in CloudForms and ManageIQ are always a combination of three items:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Event: the event triggers the evaluation of the condition. An event can be something like &amp;ldquo;VM Power On&amp;rdquo;, &amp;ldquo;Analysis completed&amp;rdquo; and many more. A list of out of the box events can be found by clicking on &lt;strong&gt;&lt;em&gt;Control&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Explorer&lt;/em&gt;&lt;/strong&gt;, and then clicking on &lt;strong&gt;&lt;em&gt;Events&lt;/em&gt;&lt;/strong&gt; in the accordion on the left&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/list-of-events.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/list-of-events-300x96.png&#34; alt=&#34;out of the box events&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The screenshot only shows a subset of all available events.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Condition: the condition is evaluated after the specified event was detected. A condition can verify that a specific Operating System is installed, the VM configuration meets certain criteria and many more&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Action: after detecting the event and validating the condition, an action can be triggered. Actions can be specified differently if the condition was TRUE or FALSE. A Control Policy can can send an email alert, trigger a SNMP trap or any customized action. A number of actions are already shipped out of the box and can be found by clicking on &lt;strong&gt;&lt;em&gt;Control&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Explorer&lt;/em&gt;&lt;/strong&gt; and then &lt;strong&gt;&lt;em&gt;Actions&lt;/em&gt;&lt;/strong&gt; in the accordion on the left&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/list-of-actions.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/list-of-actions-300x95.png&#34; alt=&#34;list of actions&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The screenshot only shows a subset of all available actions.&lt;/p&gt;

&lt;h1 id=&#34;compliance-policies-1&#34;&gt;Compliance Policies&lt;/h1&gt;

&lt;p&gt;Compliance policies are similar to Control Policies, but do not listen to events. To validate a Compliance Policy, the user can click on &lt;strong&gt;&lt;em&gt;Policy&lt;/em&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;em&gt;Check Compliance of Last Known Configuration&lt;/em&gt;&lt;/strong&gt;, or a Control Policy can trigger an Compliance Policy Check as an Action.&lt;/p&gt;

&lt;p&gt;Compliance Policies can also mark the evaluated object as either Compliant or Non-Compliant. This information can also be used in Reports and Dashboards for a better overview or to be exported for further analysis. More information about Control and Compliance Policies can be found in the &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_cloudforms/4.5/html/policies_and_profiles_guide/&#34;&gt;Policies and Profiles Guide&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;create-a-compliance-policy-for-selinux&#34;&gt;Create a Compliance Policy for SELinux&lt;/h1&gt;

&lt;p&gt;To check if SELinux is in enforcing mode, a compliance policy like this can be used:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Condition: analyse the content of /etc/sysconfig/selinux and verify &amp;ldquo;SELinux=enforcing&amp;rdquo; is found in the file&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Action: mark the VM as compliant or non-compliant&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;An example of such a policy can be found on &lt;a href=&#34;https://github.com/cbolz/ManageIQ/tree/master/control-policies&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;enable-the-policy&#34;&gt;Enable the Policy&lt;/h1&gt;

&lt;p&gt;To enable the Compliance Policy, it has to be part of a Policy Profile. The example found on &lt;a href=&#34;https://github.com/cbolz/ManageIQ/tree/master/control-policies&#34;&gt;Github&lt;/a&gt; is pre-configured accordingly.&lt;/p&gt;

&lt;p&gt;As one last step the Policy has to be enabled. This can be done on individual VMs or instances or any where in the hierarchy, up to the provider level. Policies are inherited to their child objects, for example if the Policy is enabled on a specific provider, it automatically applies to all objects found on this provider.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Navigate to the provider, e.g. &lt;strong&gt;&lt;em&gt;Compute&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Infrastructure&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Providers&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select the provider and click on &lt;strong&gt;&lt;em&gt;Policy&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Manage Policies&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/manage-policies.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/manage-policies-300x82.png&#34; alt=&#34;Manage Policies&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Check the box next to the Policy&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/enable-policy-profile.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/enable-policy-profile-300x274.png&#34; alt=&#34;Enable Policy&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Click &lt;strong&gt;&lt;em&gt;Save&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The icon shows a yellow shield to illustrate the a Policy is enabled&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/provider-policy-enabled.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/provider-policy-enabled-300x77.png&#34; alt=&#34;Provider with enabled Policy&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;verify&#34;&gt;Verify&lt;/h1&gt;

&lt;p&gt;To verify the configuration, navigate to a VM or instances on the selected provider. Click on &lt;strong&gt;&lt;em&gt;Configuration&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;Perform SmartState Analysis&lt;/em&gt;&lt;/strong&gt;. Depending on the performance of the environment, this usually takes up to two minutes. In some environments it can also take much longer (in particular on OpenStack providers).&lt;/p&gt;

&lt;p&gt;Configuration of Smart State is out of scope for this document. There is a knowledge base article &lt;a href=&#34;https://access.redhat.com/articles/435283&#34;&gt;Virtual Machine SmartState Analysis Checklist&lt;/a&gt; with some useful links.&lt;/p&gt;

&lt;p&gt;System is not compliant:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/system-non-compliant.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/system-non-compliant-300x58.png&#34; alt=&#34;System is not compliant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;System is compliant:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/system-compliant.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/system-compliant-300x61.png&#34; alt=&#34;System is not compliant&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SmartProxy Affinity</title>
      <link>http://www.jung-christian.de/post/2017/02/smart-proxy-affinity/</link>
      <pubDate>Thu, 23 Feb 2017 12:19:49 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/02/smart-proxy-affinity/</guid>
      <description>

&lt;h1 id=&#34;smartstate-analysis&#34;&gt;SmartState Analysis&lt;/h1&gt;

&lt;p&gt;CloudForms and ManageIQ can collect information from the configured providers to build its internal inventory. For virtual machines or instances this includes information like the name, associated IP addresses, virtual hardware specification and many more. Additional information can be retrieved by executing a &lt;em&gt;SmartState Analysis&lt;/em&gt;. SmartState is implemented agentless and uses temporary snapshots to analyze virtual machines and templates.&lt;/p&gt;

&lt;p&gt;To collect the information from VMware, the VDDK library has to be installed on all applicable appliances manually. For CloudForms there is a &lt;a href=&#34;https://access.redhat.com/articles/2078103&#34;&gt;knowledge base article&lt;/a&gt; which describes the setup process in detail.&lt;/p&gt;

&lt;h1 id=&#34;zones-and-regions&#34;&gt;Zones and Regions&lt;/h1&gt;

&lt;p&gt;When designing large deployments, multiple appliances are usually deployed. Zones and regions make it possible to implement security isolation and to distribute actions between multiple appliances. SmartState Analysis is comprised of two roles which can be enabled or disabled on each individual appliance. Details about roles can be found in the &lt;a href=&#34;https://access.redhat.com/documentation/en-us/red_hat_cloudforms/4.2/html/general_configuration/configuration#servers&#34;&gt;General Configuration&lt;/a&gt; Guide.&lt;/p&gt;

&lt;h1 id=&#34;role-assignment&#34;&gt;Role assignment&lt;/h1&gt;

&lt;p&gt;When a user requests a SmartState Analysis to be performed, ManageIQ or CloudForms tries to assign the job to an appropriate appliance. It&amp;rsquo;s using the information about the regions and zones and tries to find an appliance which is in the same zone as the provider on which the virtual machine or instance is located.&lt;/p&gt;

&lt;p&gt;Any appliance which is in the same zone as the parent provider, is eligable to execute the job.&lt;/p&gt;

&lt;h1 id=&#34;smart-proxy-affinity&#34;&gt;Smart Proxy Affinity&lt;/h1&gt;

&lt;p&gt;In some cases the above logic is not ideal. The following is a list of different scenarios, where the automatic assignment is not ideal or not possible. This is not a complete list, just some examples.&lt;/p&gt;

&lt;h2 id=&#34;no-appliance-is-in-the-appropriate-zone&#34;&gt;No appliance is in the appropriate zone&lt;/h2&gt;

&lt;p&gt;To make the described logic work, at least one appliance has to be in the same zone as the provider on which the VM or instance is located. For small providers (for example test environments) it might not be necessary to have dedicated appliances, so this provider has to be managed by appliances which are in the same zone, but not running on the same provider.&lt;/p&gt;

&lt;h2 id=&#34;openstack-best-practice&#34;&gt;OpenStack best practice&lt;/h2&gt;

&lt;p&gt;For OpenStack OverCloud and UnderCloud providers, it is often considered best practice to run the management infrastructure outside of the OpenStack environment. In such a setup the appliance would run on a different virtual infrastructure, but with the necessary connectivity in place to reach the API endpoints.&lt;/p&gt;

&lt;h2 id=&#34;performance-and-sociability&#34;&gt;Performance and Sociability&lt;/h2&gt;

&lt;p&gt;For very large providers or if a lot of SmartState Analysis jobs are executed, it might be necessary to assign specific appliances to a subset of the infrastructure.&lt;/p&gt;

&lt;h1 id=&#34;affinity-assignment&#34;&gt;Affinity assignment&lt;/h1&gt;

&lt;p&gt;For those few special cases where the normal automatic logic based on zones and regions doesn&amp;rsquo;t work, SmartProxy Affinity can be used to manually assign appliances to specific parts of the infrastructure.&lt;/p&gt;

&lt;p&gt;The configuration can be found by navigating to the configuration menu (click on the user name on the top right menu), on the tree in the left pane, select the zone and then the tab &amp;ldquo;SmartProxy Affinity&amp;rdquo;. It is possible to drill down and enable or disable the affinity for fine grained control.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/ssa-affinity.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/ssa-affinity-300x125.png&#34; alt=&#34;SmartProxy Affinity&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;gotcha&#34;&gt;Gotcha&lt;/h1&gt;

&lt;p&gt;If SmartProxy Affinity assignments are used, changes of the infrastructure will require the settings to be updated. For example if a new datastore or hypervisor is added, none of the appliances will be assigned until the configuration is updated.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ManageIQ vs CloudForms - what&#39;s the difference</title>
      <link>http://www.jung-christian.de/post/2017/01/manageiq-vs-cloudforms/</link>
      <pubDate>Sun, 29 Jan 2017 22:14:29 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/01/manageiq-vs-cloudforms/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://redhat.com/cloudforms&#34;&gt;Red Hat CloudForms&lt;/a&gt; and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ&lt;/a&gt; both recently launched new releases of their software. The latest release of &lt;a href=&#34;https://access.redhat.com/documentation/en/red-hat-cloudforms/4.2/paged/release-notes/&#34;&gt;Red Hat CloudForms is 4.2&lt;/a&gt;, while ManageIQ is following an alphabetical versioning schema and &lt;a href=&#34;http://manageiq.org/blog/2016/12/manageiq-euwe-ga-announcement/&#34;&gt;released Euwe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Red Hat is following an &amp;ldquo;upstream first&amp;rdquo; policy, meaning all new features are developed in the community driven project, in this case ManageIQ. Based on the work of the upstream project, every now and then a supported Red Hat Product is created, in this case Red Hat CloudForms. The most prominent example for this approach is &lt;a href=&#34;https://getfedora.org/&#34;&gt;Fedora&lt;/a&gt; which is the upstream community project for &lt;a href=&#34;https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux&#34;&gt;Red Hat Enterprise Linux&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So what&amp;rsquo;s the difference between the upstream community project and the downstream supported product?&lt;/p&gt;

&lt;h1 id=&#34;support&#34;&gt;Support&lt;/h1&gt;

&lt;p&gt;For ManageIQ, there are a number of great ways to get support direclty from the &lt;a href=&#34;http://manageiq.org/community/&#34;&gt;upstream community&lt;/a&gt;. Gitter can be used for chat, there is a forum, links to social media and opportunities to meet face to face at several conferences.&lt;/p&gt;

&lt;p&gt;As a Red Hat customer, you can open &lt;a href=&#34;http://access.redhat.com&#34;&gt;support cases&lt;/a&gt;, search the knowledge base, &lt;a href=&#34;http://www.redhat.com/training/&#34;&gt;train your staff at presence or virtual trainings&lt;/a&gt;, &lt;a href=&#34;http://www.redhat.com/consulting/&#34;&gt;hire consultants&lt;/a&gt; to design and implement your CloudForms environment. There is also a documented &lt;a href=&#34;https://access.redhat.com/support/policy/updates/cloudforms/&#34;&gt;Life Cycle&lt;/a&gt; which allows for better deployment planning.&lt;/p&gt;

&lt;p&gt;Red Hat also performs additional quality assurance before releasing the CloudForms release. Certain features which are not deemed enterprise ready, might be in ManageIQ, but not in CloudForms.&lt;/p&gt;

&lt;p&gt;For Red Hat CloudForms the &lt;a href=&#34;https://access.redhat.com/documentation/en/red-hat-cloudforms/4.2/paged/support-matrix/&#34;&gt;Support Matrix&lt;/a&gt; describes in detail which feature is supported and which isn&amp;rsquo;t. For example, in ManageIQ Euwe includes the capability to manage &lt;a href=&#34;https://github.com/ManageIQ/manageiq/blob/euwe/CHANGELOG.md&#34;&gt;VMware vCloud&lt;/a&gt;, which is currently not listed as being supported in CloudForms.&lt;/p&gt;

&lt;h1 id=&#34;branding&#34;&gt;Branding&lt;/h1&gt;

&lt;p&gt;The branding of the UI, naming of the images and packages, and the documentation are different too. Until recently, Red Hat CloudForms was using &lt;a href=&#34;http://www.adobe.com/&#34;&gt;Adobe Flash&lt;/a&gt; to render certain diagrams and graphs, while ManageIQ was using a JavaScript library to do the same. Starting with version 4.2 of CloudForms, it is using the same library and &lt;a href=&#34;http://www.jung-christian.de/post/2017/01/bye-bye-flash/&#34;&gt;got rid of Flash&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;upgrades&#34;&gt;Upgrades&lt;/h1&gt;

&lt;p&gt;Red Hat CloudForms is a virtual appliances based on Red Hat Enterprise Linux. All software installed in the appliance is packaged in the RPM format. Customers can subscribe to Red Hat Network, Satellite or Update Infrastructure to deploy updates to the appliances.&lt;/p&gt;

&lt;p&gt;ManageIQ virtual appliances are based on &lt;a href=&#34;http://www.centos.org&#34;&gt;CentOS&lt;/a&gt; and the additional software is basically just a git clone. To do an upgrade of the underlying OS, you can just do a &amp;ldquo;yum update&amp;rdquo; as usual, but this will not update the ManageIQ application.&lt;/p&gt;

&lt;p&gt;Each Red Hat CloudForms release also comes with an &lt;a href=&#34;https://access.redhat.com/documentation/en/red-hat-cloudforms/4.2/paged/migrating-to-red-hat-cloudforms-42/&#34;&gt;step-by-step guide&lt;/a&gt; on how to perform upgrades. The &lt;a href=&#34;https://access.redhat.com/support/policy/updates/cloudforms/&#34;&gt;Life Cycle document&lt;/a&gt; helps to understand which upgrades are and will be supported.&lt;/p&gt;

&lt;p&gt;ManageIQ does not have an official Life Cycle document. Upgrades also require &lt;a href=&#34;http://talk.manageiq.org/t/upgrading-from-darga-n-to-darga-n-1/1574/3&#34;&gt;more manual steps&lt;/a&gt; and a better understanding of Ruby, Rails, Linux and how to fix stuff is necessary.&lt;/p&gt;

&lt;h1 id=&#34;automate&#34;&gt;Automate&lt;/h1&gt;

&lt;p&gt;Users and customers can extend the out of the box functionality by adding their own code in what is called &amp;ldquo;Automate&amp;rdquo;. Although both versions ship with the &amp;ldquo;ManageIQ&amp;rdquo; domain, only Red Hat CloudForms comes with an additional &amp;ldquo;Red Hat&amp;rdquo; domain. This domain includes some additional integration examples and optimizations.&lt;/p&gt;

&lt;h1 id=&#34;disclaimer&#34;&gt;Disclaimer&lt;/h1&gt;

&lt;p&gt;This might not be a complete list of all differences between ManageIQ and CloudForms. It&amp;rsquo;s also - intentionally - not discussiong business value of the subscription and focuses exclusively on the technical characteristics.&lt;/p&gt;

&lt;p&gt;There is also an article about the same topic on the &lt;a href=&#34;http://talk.manageiq.org/t/differences-between-red-hat-cloudforms-and-manageiq/728/4&#34;&gt;ManageIQ Forum&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Call a script from a Control Policy</title>
      <link>http://www.jung-christian.de/post/2017/01/call-script-from-control-policy/</link>
      <pubDate>Tue, 17 Jan 2017 22:14:29 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/01/call-script-from-control-policy/</guid>
      <description>

&lt;h1 id=&#34;control-and-compliance-policies&#34;&gt;Control and Compliance Policies&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://redhat.com/cloudforms&#34;&gt;Red Hat CloudForms&lt;/a&gt; and &lt;a href=&#34;http://www.manageiq.org&#34;&gt;ManageIQ&lt;/a&gt; allow users to create control and compliance policies to enforce compliance checks on the Cloud, IaaS and PaaS environment. There is &lt;a href=&#34;http://manageiq.org/docs/reference/latest/doc-Policies_and_Profiles_Guide/miq/&#34;&gt;Documentation&lt;/a&gt; available on how to create and manage Policies, so this post will skip going into further details on that.&lt;/p&gt;

&lt;p&gt;With such a policy very powerful rules can be created and enabled. Sometimes a very simple example is all you need though. I&amp;rsquo;ve been asked several times how we could call a simple shell script or execute any command triggered by a control or compliance policy and this post should help to shed some light on it.&lt;/p&gt;

&lt;h1 id=&#34;automate-method-to-run-a-system-command&#34;&gt;Automate Method to run a system command&lt;/h1&gt;

&lt;p&gt;First we need a method which we can call from a Control Policy. You can import my &lt;a href=&#34;https://github.com/cbolz/ManageIQ/tree/master/Automate&#34;&gt;Automate Datastore from Github&lt;/a&gt;. You can find a method which calls a System Command in cjung-git/Control/Methods/run_script.&lt;/p&gt;

&lt;p&gt;The interesting part is just this one line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;system(&amp;quot;/bin/rpm -q cfme &amp;amp;&amp;gt; /tmp/cfme-release.txt&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This examples queries the system for the installed version of the CFME package and writes the result into a file in /tmp called cfme-release.txt. You could replace the system command with anything you want. Keep in mind though, that you can not user interactive commands which are asking for user input.&lt;/p&gt;

&lt;h1 id=&#34;creating-a-control-policy&#34;&gt;Creating a Control Policy&lt;/h1&gt;

&lt;p&gt;CloudForms has two types of Policies. Control Policies consist of an &lt;strong&gt;Event&lt;/strong&gt; which triggers the policy, a &lt;strong&gt;Condition&lt;/strong&gt; which has to be met and an &lt;strong&gt;Action&lt;/strong&gt; which will be performed.&lt;/p&gt;

&lt;p&gt;Compliance Policies are slightly different. They are not trigered by an event and the result (compliant or not compliant) will be shown in the details of the affected object, for example a virtual machine. Control Policies can trigger a compliance check and the results of a compliance check can trigger a control policy.&lt;/p&gt;

&lt;p&gt;For this example, we create a simple Compliance Policy.&lt;/p&gt;

&lt;h2 id=&#34;create-a-new-action&#34;&gt;Create a new Action&lt;/h2&gt;

&lt;p&gt;To be able to call our system command, we need to create a new action. Navigate to Control, Explorer, Actions and click Configuration, Add a new action. We want o run our own piece of code which is executed from Automate, so we have to select &amp;ldquo;Invoke a Custom Automation&amp;rdquo;. As usual, give your action a reasonable name.&lt;/p&gt;

&lt;p&gt;In the Custom Automation fields which just appeared, we need to tell the system which action to perform. The Automate Datastore which you just imported has an Request defined which is called &amp;ldquo;run_script&amp;rdquo;. This has to go into the Request field. The message is in most cases &amp;ldquo;create&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;If you want to lean more about Automate, check out the book &lt;a href=&#34;https://access.redhat.com/mastering-cloudforms-automation&#34;&gt;&amp;ldquo;Master CloudForms Automation&amp;rdquo;&lt;/a&gt; - which also applies to ManageIQ.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/add-new-action.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/add-new-action-300x195.png&#34; alt=&#34;Add new Action&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;create-new-policy&#34;&gt;Create new Policy&lt;/h2&gt;

&lt;p&gt;Navigate to Control, Explorer, Policies and select &amp;ldquo;VM Compliant Policies&amp;rdquo;. In the Configuration Menu click select add a new policy. Choose a reasonable name.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jung-christian.de/images/control-policy-system-command.png&#34;&gt;&lt;img src=&#34;http://www.jung-christian.de/images/control-policy-system-command-300x145.png&#34; alt=&#34;Add Compliance Policy&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bye Bye Flash</title>
      <link>http://www.jung-christian.de/post/2017/01/bye-bye-flash/</link>
      <pubDate>Thu, 12 Jan 2017 18:10:50 +0100</pubDate>
      
      <guid>http://www.jung-christian.de/post/2017/01/bye-bye-flash/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.adobe.com/de/products/flash.html&#34;&gt;Adobe&amp;rsquo;s Flash Plugin&lt;/a&gt; is well known for its security flaws and for causing browser crashes. ManageIQ got rid of Flash already in the Anand Release and replaced all relevant parts of the code with a JavaScript library to render graphs and diagrams. Finally &lt;a href=&#34;http://cloudformsblog.redhat.com/2017/01/04/announcing-cloudforms-4-2/&#34;&gt;Red Hat CloudForms 4.2&lt;/a&gt; was released and is now using the same JavaScript library and does not require Flash anymore.&lt;/p&gt;

&lt;p&gt;So the first thing I did is running the following command on all my machines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rpm -e flash-plugin
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Blog relaunch</title>
      <link>http://www.jung-christian.de/post/2016/12/blog-relaunch/</link>
      <pubDate>Wed, 21 Dec 2016 00:00:00 +0000</pubDate>
      
      <guid>http://www.jung-christian.de/post/2016/12/blog-relaunch/</guid>
      <description>&lt;p&gt;After using &lt;a href=&#34;http://www.wordpress.org&#34;&gt;Wordpress&lt;/a&gt; on &lt;a href=&#34;http://www.openshift.com&#34;&gt;OpenShift Online&lt;/a&gt; for a long time, I decided to switch my blog platform. The new blog is using statically created HTML pages generated by &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Performance of the new page should be much better. I made sure no links were broken during this transition.&lt;/p&gt;

&lt;p&gt;At the same time I fixed some internal stuff and selected a fresh and modern design. This should also render quite nicely on mobile devices.&lt;/p&gt;

&lt;p&gt;The new pages do not allow visitors to leave comments any more. The vast majority of comments I got were SPAM and it got quite annoying. If you want to reach out to me, check the about page for contact details.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>